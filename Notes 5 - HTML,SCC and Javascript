Files
* The files your website needs should be kept in a single folder that mirrors
  the published website's file structure on the server.
* Many computers and servers are case sensitive, so be careful when naming
  files. It is generally best to use lower case and use dashes instead of
  spaces. Servers might replace a space with %20, which is the character code
  for spaces. The google search engine treats a dash as a word separator, but
  does not regard an underscore that way.
* Usually you'll have at least the following folders:
  * index.html - containing you homepage content including text and images
  * images filder - containing all your images
  * styles folder - containing all your CSS code
  * scripts folder - containing all the JavaScript code
* You need to provide a path between files in your index.html
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <title>My test page</title>
    </head>
    <body>
      <img src="images/your-image-filename" alt="My test image"
      <p>This is an ordered list</p>
      <ol>
        <li>item 1</li>
        <li>item 2</li>
      </ol>
      <p>This is an unordered list</p>
      <ul>
        <li>item 1</li>
        <li>item 2</li>
      </ul>
      <p>This is a link. a = anchor, href = hypertest reference.</p>
      <a href="https://www.mozilla.org/en-UK/about/">Mozilla About Page</a>
    </body>
  </html>
* Windows uses backslashes but this desn't make any difference - continue using
  forwardslashes in html. The path navigation commands are the same as in unix.
Hypertext Markup Language (HTML)
* A HTML element consists of an opening tag, the content and a closing tag. The
  type of element is specified in the opening/closing tags.
* Elements can have attributes. Attributes consist of a name followed by a value
  in quotation marks:
  <p class="editor-note">My cat is very grumpy</p>
  You can omit the quotation marks for simple attributes without whitespace or
  ASCII characters.
* If you don't have any content then you don't need a closing tag
  <img src="images/firefox-icon.png" alt="My test image">
  Here the alt attribute contains descriptive text for users who cannot see the
  image, which can happen if the user is visually imparied or something has gone
  wrong with your web page.
* The <html></html> element is known as the root element
* The <head></head> element contains stuff you're not going to show to viewers.
  E.g. page description and keywords for search results, CSS, etc.
* The <meta charset="utf-8"> element sets the character set to UTF-8.
* The <title></title> element is what appears in your browser tab. It is also
  used in bookmarks/favourites.
* HTML can contain 6 heading levels, <h1>-<h6>
* The https:// or http:// part is called the protocol and must be included.

Cascading Style Sheets (CSS)
* This is a style sheet language. This means you can apply styles selectively to
  elements in HTML documents.
* To turn all the paragraphs on a HTML page red, use:
  p, li, h1 {
    color:red;
    width: 500px; /* px means pixels */
    border: 1px solid black;
  }
* This stuff goes in the styles.css file in the styles folder. The head elements
  in the index.html file will need to be updated with the following
  <link href="styles/style.css" ref="stylesheet">
* IN CSS instead of elements you have rule sets. These consist of a selector and
  declaration.
  * The selector specifies the element(s) you'd like to styles
  * The declaration contains a single rule, specifying which of the element's
    properties you want to style (property), as well as how you'd like to style
    it (property value).
* The selector can select more than just element types. Here are the most common
  selector types:
  * ID selector selects he element on the page with the specified ID. E.g.
    #my-id selects <p id="my-id"> and <a id="my-id">
  * Class selector selects elements of the specified class. E.g. .my-class
    selects <p class="my-class">
  * Attribute selector selects elements with the specified attribute. E.g.
    img[src] selects <img src="myimage.png"> but not <img>
  * Pseudo-class selector selects the specified elements only when in the
    specified state (e.g. being hovered over). E.g. a:hover selects <a> but only
    when the mouse pointer is hovering over the link.
* You can add a link to your index.html file your page downloads a font family
  when it loads. This enables you to set it on your HTML elements. E.g.
  <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
  Then in your .css file
  html {
    font-size: 10px;
    font-family: "Open Sans", sans-serif;
    background-color: #00539F;
  }
  h1 {
    font-size: 60px;
    text-align: center;
    margin: 0; /* gets rid of the default styling applied on the <h1> element */
    padding: 20px 0;
    color: #00539F;
    text-shadow: 3px 3px 1px black; /* horizontal offset, vertical offset, blur
                                       radius, base colour */
  }
  p, li {
    font-size: 16px;
    line-height: 2;
    letter-spacing: 1px;
  }
  body {
    width: 600px;
    margin: 0 auto; /* If only two values provided then the first value affects
                       the top and bottom, while the second affects the left and
                       right. Auto divides the available space equally */
    background-color: #FF9500;
    padding: 0 20px 20px 20px; /* If four values provided then the first value
                                  affects the top, then right, bottom and left,
                                  in that order */
    border: 5px solid black;
  }
  img {
    display: block; /* unlike the body element, which is block level, the img
                      element is inline, which means it cant have spacing values
                      such as margin. We include this command to apply margins
                      to the image. */
    margin: 0 auto;
  }
* CSS layout is based principally on the box model. Most of the HTML elements on
  a page can be thought of as boxes stacked on top of one another. Each box has
  * Margin (the space around the outside of the element)
    * Border (surrounds your padding)
      * Padding (the space immediately surrounding your content). The 'color',
        'text-shadow' and 'background-color' properties refer to this.

JavaScript
* Invented by Brendan Eich, co-founder of Mozilla
* Developers have written tools to unlock extra functionality, including:
  * Browser Application Programming interfaces (APIs) - APIs built into web
    browsers providing functionality like dynamically creating HTML and setting
    CSS styles, collecting and manipulating a video stream from a user's webcam,
    etc.
  * Third-party APIs - allow developers to incorporate functionality in their
    sites from other content providers, such as Twitter or Facebook.
  * Third-party frameworks and libraries.
* To incorporate JavaScript into your page, add a main.js file in your scripts
  folder and add the following line to your index.html body:
  <script src="scripts/main.js"></script>
  This should be added after any HTML the JavaScript is supposed to affect. This
  is because the HTML is loaded by the browser in the order it appears in the
  file. It is usually the best strategy to put this just before the </body> tag. 
